  Throw exceptions for user interrupts
  Throw exceptions for test failures
  Throw exceptions for parse errors
  AI: Implement transposition tables and use in alpha-beta search
  Movegen: Use magic bitboards for move generation
  Movegen: Use magic bitboards for attack squares
  UI: Add a new game panel
  UI: try to pixel align as many borders as possible
  Test: Add perft level option
  UIPL: on hover, change background color when we can change the player
  When AIs are playing each other, making human moves should be allowed until we start the game
  AI: I think when we're ahead, we permit 3-fold draws too easily
  Use C++ exception class to throw exceptions
  Choosing the player picker while the AI is running crashes
  When player picker is up, clicking outside the picker should make it cancel.
  Ticking clock overwrites popup tips
  Log: Should we hash tags?
  Help: Help box icon looks like shit
  UIPL: Move level control into the chooser
  Move all localizable strings into resources
  Need to rethink the MakeMv/UndoMv/RedoMv in BD, BDG, UIBD, and GA and where game over state is checked
  ML: I don't think move list is baseline aligned - problem with descenders? 
  Can we make things like Undo work while AI is thinking?
  ML: Take advantage of DrawSzFit in move list, etc. to  make move list narrower
  AI: Communicate best continuation back
  Use UCI (universal chess interface) to communicate to UI from AI
  AI: Quitting the app while AI is running sometimes crashes in PresentSwch
  UI: Move as many drawing objects into classes as possible
  Test: Aborting Undo test doesn't stop the entire test run - it just keeps on to player test run
  Test: We're erroneously reporting success when aborting test run
  Test: Clicking test button in UIDB should interrupt a running test
  Log: File logging and UIDB logging need to have their own depth
  Test: Don't show player names in UITI during test runs
  AI: spin off AI into its own thread
  UI: Need a visual indication of where focus is
  UIDB: Add support for multi-line log entries in db panel
  Add ability to load FEN files
  Open: Beef up error handling in deserialize
  Test: add option to choose which PGN files to run
  Test: add options for which tests to run
  Test: if no pgn files in a directory, file enumeration crashes
  ML: Size icons in move list slightly larger than text
  AI: Consider a different board evaluation for pre-sorting alpha-beta pruning
  AI: Can we search for already evaluated board positions? Could save a lot of time in end game.
  ML: If text in move list gets too small, replace icons with letters
  Test: Is there a C++ way to enumerate files in a directory for Test? (std::filesystem::directory_iterator ?)
  UI: Scale buttons to size of window
  UITI: Layout using font metrics
  UI: Test with alternate fonts
  UIBD: Dragging pieces outside board clips the dragged piece
  UIML: The wins (1-0 0-1 and 1/2-1/2) are not included in the move list at end of game (should it?)
  Add canceled game-over state
  Open: PGN game browser if multiple games in Open...
  UI: Implement labeled icon buttons
  Test: Parse errors in PGN file test should display in test progress panel
  Move gen: bitboard king
  Move gen: bitboard bishops, rooks, and queens
  Move gen: bitboard knights
  Move gen: bitboard pawns
  Move gen: use bitboards to test attack squares for legal castles
  Bug: During Computer-Computer play, the clock on Move 1 goes to black's time
  AI: annotate candidate best moves on board
  AI: interruptible
  AI: look deeper on a few of the "best" moves
  AI: take clock time into account
  Eval: Add square control factor to evaluation function
  Limit UI during message pumps in test and AI
  AI: Do a multithreaded lookup
  Test: Add option to draw or not draw moves during test run
  Test: Don't display resign/draw controls during test playback
  AI: build and keep lookahead tree 
  UIBD: Hilite last made move on board
  Feature: Add a UI for setting up a board
  AI: Play through until no checks before evaluation
  SBAR: When dragging thumb, if drag off the scrollbar, snap thumb back to original position
  Test: PGN games should feed moves through a PL
  ML: Checkmates should have a # instead of a +
  ML: With small windows, need to do something about the move list. Or limit window size?
  ML: Hook up resignation button
  ML: Add a UI for offering draws
  UI for specifying human player names
  UITI: Hook up UI elements to real information from the GA
  UI: Implement disabled menu items hooked to the CMD
  UI: Implement disabled buttons that hook to CMD
  UIBD: clips when rotating on flip board
  UIBD: Dragging pieces outside the board rectangle doesn't redraw the piece right
  UIBD: Legal move circles disappear when dragging
  GA: Break the UI out of the GA
  Official game has slightly different rules for some draw situations
  ML: Animate the game over panel into position.
  ML: Add undo/redo/play/pause buttons in a panel
  Have an official game mode that does not allow undo
  Keyboard entry of moves
  UI for picking clock/timing rules 
  UIBD: Implement queued move-ahead 
  UIBD: Implement click-from/click-to mouse move interface
  UIBD: Implement circle annotations on mouse right click
  UIBD: Implement arrow annotations on mouse right click/drag
* Add ability to paste FEN format
* Open: Implement an interruption hook in deserialize and use it in Test, but not Open or Paste
* Include en passant and castle states to Zobrist hashing
* Have debug perft tests stop at a certain number of expected nodes
* Use hashes to compare draws and board equality
* Can we hash boards to help with the 3-fold draw detection?
* AI: Hash boards
* Implement Zobrist hashing of the board and keep it up-to-date in the BD
* Move cpcToMove from the BDG to the BD
* Move gen: checks use bitboards for bishops, rooks, and queens
* Keep occupied (white/black) and empty square bitboard in the BD
* Move gen: checks use bitboards for king
* Move gen: checks use bitboards for knights
* Move gen: checks use bitboards for pawns
* SBAR: thumb dragging is slightly off - does not adjust for location of initial mouse click within the thumb
* UIBD: With board rotated black point of view, animations are messed up
* UI: Add mouse support for dragging scrollbar thumb
* UI: add timer dispatching to UIs
* UI: Add repeater on scrollbar hold down
* UI: Improve visuals for scrollbar
* UI: Add mouse support for clicking scrollbar pages
* UI: Peg scrollbar thumb at minimum size
* Implement scrollbars as a control ui element
* Test: add a move gen test and validate some hard cases
* Test: add perft test
* Should do const references instead of by-value calls for RCF and PTF
* AI: Starting AI with black-to-move lets white move first
* Review code for using min/max/peg
* Debug panel isn't showing on boot
* Rename PTF and RCF to PT and RC, and all other f suffixes. 
* AI: Should we do move/undo instead of duplicating boards? 
* Log: second game screws up the log content/view
* Log: Add properties to tag 
* Log: Logging gets really slow when a lot of log entries start piling up.
* Dragged human player moves shouldn't animate into place
* Make small icon with logo
* Use our logo in app icon
* UI for choosing computer player
* AI: need to discourage early queen development
* ML: Undo doesn't take down game over panel
* ML: Merge UIGO and UIGC
* UIBD: There is a weird hit test on the left edge of the board that is hitting squares three squares over
* Feature: Allow human to play the AI
* PL: Add message pump to the PL for getting player moves
* With Arial font, player name UI elements has a very wide gap between name and color circle
* UIPL: scale long player names in UITI and UIML
* UIBD: When dragging pieces, highlight square when hovering over a legal move
* Move logging buttons into their own button bar in UIDB
* UITI: Put name of our program with the logo
* Buttons in UIDB don't display sometimes on first boot
* Save icon on debug command bar is clipped on left edge
* UIBD: Optimize redraw
* Label text size on UIBD is changing - maybe when alt-tabbing to another app and coming back?
* Split up game into more parts: opening, early mid, mid, late mid, end, late end.
* Should make board evaluations relative to pawn value
* Convert to Intel compiler
* Use custom move array that pre-allocates 50 fixed items
* Implement an integer spinner control and use it for log depth
* PgeomCreate can get the d2 factory from App().
* Tooltips don't resize for shorter text (only with FreeSerif?)
* Display log depth in debug panel
* Implement "default" log depths, which can be overriden by user changing them
* Save: Save our game PGN log file in the directory of the .exe 
* Add UI turn on/off file logging
* logging to file
* Add UI to pick log depth level, 
* Logging options: heirarchy depth
* Test: Move test progress into debug panel
* Add an option in logging to replace last log entry
* Heirarchical logging
* Do a couple different AIs and have them play one another
* AI: Report boards/second evaluation speed in debug window
* Bug: File/Open doesn't redraw board or scroll ML at end of the load
* ML: Implement mouse interface to change selection on UIML
* Bug: Dragging window edges doesn't resize game interior (dragging corners works)
* Bug: Open PGN files assert if no \n on last line
* Use bit fields to layout MV
* Save: Saving PGN files doesn't break lines at 80 columns as spec'ed.
* Verify IPC is layed out in the byte in the smart way
* Make scroll wheel scrolling do multiples of line height
* Resizing UIPS screws up bounds on scroll wheel scroll
* Add mouse scroll wheel support for scrolling UIs
* ML: baseline of numbers, white moves, and black moves are not the same
* Change cursor over wheel-able areas to double arrow
* Alpha-beta pruning does not work well in end game.
* AI: need some end-game improvement
* ML: Animate moves when manually going through move list
* AI: not taking mate in one in certain situations (see game-2021-05-18-1.pgn)
* BDG: Change Undo/Redo to be an imvCur operation
* ML: Implement keyboard interface to change selection on UIML (arrow, home, end, pgup, pgdn?)
* Implement keyboard focus for UI
* Make debug log scroll
* Feature: Add copy/paste commands to export/import PGN game board
* Can we compile using C++ 17?
* Change content and view rectangles in scrolling panels to be owner relative instead of global
* Make scrollbar show current scroll location in UIPS
* Test: Re-organize PGN test files to be in sub-directories
* Rescale piece valuations to be 100 for a pawn.
* AI: Do 3-move repetition draws in the AI lookahead
* AI: Display progress in the debug panel
* Move PGN decoding code into save
* Move PGN parsing code into open
* Move list isn't scrolling selection into view
* Need to add small cell margins in move list
* UIBD: Scale outline width on resize
* UIBD: When board gets small, stop displaying borders
* Convert save code to use streams
* Save: When writing PGN files, don't use P (no P for regular moves, column for captures)
* Bug: Minimizing window asserts
* ML: Implement selection in UIML
* Build: Move non-code resources into a subdirectory
* ML: clip long player names in UITI and UIML
* Resize ML and TI based on font metrics
* Not redrawing board after dragging to an illegal move
* UIBD: Scale text on labels to size of board
* Get font metrics to layout multi-line text
* ML: Modify move list to do real algebraic notation with full optimzations
* Use unicode figures in move list
* Size tooltips to the size of the text 
* UI: Add tooltips for buttons
* Add menu item to show/hide debug panel
* UIGO panel comes up during no-show test runs
* Need to add a redraw state (fast, hidden, animated) to the GA
* Add bitboards to the BD, track pieces, and validate them
* UI: Implement a debug screen panel
* Save PGN is not writing correct game out
* ML: Move list does not redraw on window resize
* Should error in MakeMv if we try to make an illegal move
* AI: Add message pump while thinking
* Add command to load PGN files and load specific games for analysis
* Add ability to open PGN files
* Add ability to save PGN files
* AI: convert presort to use a binary search and insertion sort
* Bug: kings are moving into queen check
* Bug: don't display all possible moves during mouse hover
* AI: Don't prune moves during quiescent move gen if we're in check
* Add test button to the debug panel.
* Rename SPA to UI
* Need a no-clock mode that works with certain clock games, and playback modes
* Implement full clock/timing rules
* Convert to 0x88 board
* AI: Sort moves to improve alpha-beta pruning
* AI: Play through until no captures before board evaluation
* BDG eval: checkmates should be adjusted by number of moves
* AI: Not taking checkmates when they are available
* Have File/Play play the game on screen instead of creating new game
* Do Alpha-Beta pruning in AI
* Implement dumb AI for computer play
* Bug: e.p. gets put on non-pawn moves sometimes during the full test. 
* Move list isn't wide enough for Pxd6 e.p.+
* Turn off rotate icon during rotation
* Rename TF to TX
* Center character in character buttons
* Promoted pawn moves on UIBD are displayed with dark circle instead of light circle
* Fix gridlines between panels in UIML
* Change SPATI items to be separate UI elements
* Hovering and tracking feedback over image buttons
* Remove DxWidth and DyHeight from SPA
* Game Over panel isn't working
* Assert when dragging and upclick off control
* Remove dependency on app in all the UIs
* Get BTNs working and dispatching cmds
* Beef up layout code to handle locating clocks et.al.
* Better quality scaling on small boards
* Add UI for resigning
* Add UI for offering draw
* Add controls to UIML for resigning/offering draws
* Move to Direct2D 1.1 and use ID2D1DeviceContext
* Change player names in the UIML to use UI elements
* Lock out move UI when game is over - necessary for non-stalemate draws and resignation
* Implement draws by 3-move repetition
* Implement draws by 50 moves without progress
* Implement move redo
* Implement move undo
* Add information to MV so moves can be undone
* Clocks don't rotate with rotating board
* Display game end explanations in the move list (checkmate, resign, stalemate, etc.)
* Implement loss by clock expiration
* Clocks should turn red when close to timing out
* Clocks should animate when ticking
* Implement clock timers
* Add check/mate indicators on move list
* Change clocks to use UI elements
* Make default Draw() draw child UIs
* Change title panel to display players with color icons, and type of game (e.g., 5+3 Blitz, Correspondence)
* Aborting Tests run does not really abort 