  Need an indication of where focus is
  Improve visuals for scrollbar
  Peg scrollbar thumb at minimum size
  Add mouse scroll wheel support for scrolling UIs
  Add mouse support for clicking scrollbar pages
  Add mouse support for dragging scrollbar thumb
  Add support for multi-line log entries in db panel
  Add ability to load FEN files
  Add ability to paste FEN format
  Implement an interruption hook in deserialize and use it in Test, but not Open or Paste
  Beef up error handling in deserialize
  Test: add option to choose which PGN files to run
  Test: add options for which tests to run
  Add an option in logging to replace last log entry
  Test: if no pgn files in a directory, file enumeration crashes
  Size icons in move list slightly larger than text
  Alpha-beta pruning does not work well in end game.
  Consider a different board evaluation for pre-sorting alpha-beta pruning
  Can we search for already evaluated board positions? Could save a lot of time in end game.
  Should make board evaluations relative to pawn value
  If text in move list gets too small, replace icons with letters
  Is there a C++ way to enumerate files in a directory for Test? (std::filesystem::directory_iterator ?)
  Scale buttons to size of window
  UIPL: scale long player names in UITI and UIML
  UITI: Put name of our program with the logo
  UITI Layout using font metrics
  Save: Save our game PGN log file in the directory of the .exe 
  Test with alternate fonts
  Tooltips don't resize for shorter text (only with FreeSerif?)
  UIBD: Dragging pieces outside board clips the dragged piece
  Save: Saving PGN files doesn't break lines at 80 columns as spec'ed.
  UIML: The wins (1-0 0-1 and 1/2-1/2) are not included in the move list at end of game (should it?)
  Use bit fields to layout MV
  Verify IPC is layed out in the byte in the smart way
  Bug: File/Open doesn't redraw board or scroll ML at end of the load
  Bug: Dragging window edges doesn't resize game interior (dragging corners works)
  Bug: Open PGN files assert if no \n on last line
  Add canceled game-over state
  Open: PGN game browser if multiple games in Open...
  UI: Implement labeled icon buttons
  Test: Parse errors in PGN file test should display in test progress panel
  Test: Move test progress into debug panel
  Move gen: bitboard king
  Move gen: bitboard bishops, rooks, and queens
  Move gen: bitboard knights
  Move gen: bitboard pawns
  AI: need some end-game improvement
  AI: need to discourage early queen development
  Bug: During Computer-Computer play, the clock on Move 1 goes to black's time
  AI: annotate candidate best moves on board
  AI: interruptible
  AI: look deeper on a few of the "best" moves
  AI: take clock time into account
  Can we hash boards to help with the 3-fold draw detection?
  Eval: Add square control factor to evaluation function
  Limit UI during message pumps in test and AI
  AI: Do a multithreaded lookup
  ML: Undo doesn't take down game over panel
  Test: Add option to draw or not draw moves during test run
  Test: Don't display resign/draw controls during test playback
  Feature: Allow human to play the AI
  AI: build and keep lookahead tree 
  AI: Add debug ability to pause and step through eval tree
  UIBD: Hilite last made move on board
  Feature: Add a UI for setting up a board
  AI: Play through until no checks before evaluation
  Test: PGN games should feed moves through a PL
  ML: Merge UIGO and UIGC
  ML: Checkmates should have a # instead of a +
  PL: Add message pump to the PL for getting player moves
  ML: With small windows, need to do something about the move list. Or limit window size?
  ML: Hook up resignation button
  ML: Add a UI for offering draws
  UI for specifying player names
  UI for choosing computer player
  UIBD: There is a weird hit test on the left edge of the board that is hitting squares three squares over
  UITI: Hook up UI elements to real information from the GA
  UI: Implement disabled menu items hooked to the CMD
  UI: Implement disabled buttons that hook to CMD
  UIBD: clips when rotating on flip board
  UIBD: Dragging pieces outside the board rectangle doesn't redraw the piece right
  UIBD: Legal move circles disappear when dragging
  GA: Break the UI out of the GA
  Official game has slightly different rules for some draw situations
  Playing test PGN files in Fast mode should display result in game over panel
  ML: Animate the game over panel into position.
  ML: Add undo/redo/play/pause buttons in a panel
  Have an official game mode that does not allow undo
  Keyboard entry of moves
  UIBD: When dragging pieces, highlight square when hovering over a legal move
  UI for picking clock/timing rules 
  UIBD: Implement queued move-ahead 
  UIBD: Implement click-from/click-to mouse move interface
  UIBD: Implement circle annotations on mouse right click
  UIBD: Implement arrow annotations on mouse right click/drag
  ML: Optimize redraw
  UIBD: Optimize redraw
  ML: Implement mouse interface to change selection on UIML
* ML: Animate moves when manually going through move list
* AI: not taking mate in one in certain situations (see game-2021-05-18-1.pgn)
* BDG: Change Undo/Redo to be an imvCur operation
* ML: Implement keyboard interface to change selection on UIML (arrow, home, end, pgup, pgdn?)
* Implement keyboard focus for UI
* Make debug log scroll
* Feature: Add copy/paste commands to export/import PGN game board
* Can we compile using C++ 17?
* Change content and view rectangles in scrolling panels to be owner relative instead of global
* Make scrollbar show current scroll location in UIPS
* Test: Re-organize PGN test files to be in sub-directories
* Rescale piece valuations to be 100 for a pawn.
* AI: Do 3-move repetition draws in the AI lookahead
* AI: Display progress in the debug panel
* Move PGN decoding code into save
* Move PGN parsing code into open
* Move list isn't scrolling selection into view
* Need to add small cell margins in move list
* UIBD: Scale outline width on resize
* UIBD: When board gets small, stop displaying borders
* Convert save code to use streams
* Save: When writing PGN files, don't use P (no P for regular moves, column for captures)
* Bug: Minimizing window asserts
* ML: Implement selection in UIML
* Build: Move non-code resources into a subdirectory
* ML: clip long player names in UITI and UIML
* Resize ML and TI based on font metrics
* Not redrawing board after dragging to an illegal move
* UIBD: Scale text on labels to size of board
* Get font metrics to layout multi-line text
* ML: Modify move list to do real algebraic notation with full optimzations
* Use unicode figures in move list
* Size tooltips to the size of the text 
* UI: Add tooltips for buttons
* Add menu item to show/hide debug panel
* UIGO panel comes up during no-show test runs
* Need to add a redraw state (fast, hidden, animated) to the GA
* Add bitboards to the BD, track pieces, and validate them
* UI: Implement a debug screen panel
* Save PGN is not writing correct game out
* ML: Move list does not redraw on window resize
* Should error in MakeMv if we try to make an illegal move
* AI: Add message pump while thinking
* Add command to load PGN files and load specific games for analysis
* Add ability to open PGN files
* Add ability to save PGN files
* AI: convert presort to use a binary search and insertion sort
* Bug: kings are moving into queen check
* Bug: don't display all possible moves during mouse hover
* AI: Don't prune moves during quiescent move gen if we're in check
* Add test button to the debug panel.
* Rename SPA to UI
* Need a no-clock mode that works with certain clock games, and playback modes
* Implement full clock/timing rules
* Convert to 0x88 board
* AI: Sort moves to improve alpha-beta pruning
* AI: Play through until no captures before board evaluation
* BDG eval: checkmates should be adjusted by number of moves
* AI: Not taking checkmates when they are available
* Have File/Play play the game on screen instead of creating new game
* Do Alpha-Beta pruning in AI
* Implement dumb AI for computer play
* Bug: e.p. gets put on non-pawn moves sometimes during the full test. 
* Move list isn't wide enough for Pxd6 e.p.+
* Turn off rotate icon during rotation
* Rename TF to TX
* Center character in character buttons
* Promoted pawn moves on UIBD are displayed with dark circle instead of light circle
* Fix gridlines between panels in UIML
* Change SPATI items to be separate UI elements
* Hovering and tracking feedback over image buttons
* Remove DxWidth and DyHeight from SPA
* Game Over panel isn't working
* Assert when dragging and upclick off control
* Remove dependency on app in all the UIs
* Get BTNs working and dispatching cmds
* Beef up layout code to handle locating clocks et.al.
* Better quality scaling on small boards
* Add UI for resigning
* Add UI for offering draw
* Add controls to UIML for resigning/offering draws
* Move to Direct2D 1.1 and use ID2D1DeviceContext
* Change player names in the UIML to use UI elements
* Lock out move UI when game is over - necessary for non-stalemate draws and resignation
* Implement draws by 3-move repetition
* Implement draws by 50 moves without progress
* Implement move redo
* Implement move undo
* Add information to MV so moves can be undone
* Clocks don't rotate with rotating board
* Display game end explanations in the move list (checkmate, resign, stalemate, etc.)
* Implement loss by clock expiration
* Clocks should turn red when close to timing out
* Clocks should animate when ticking
* Implement clock timers
* Add check/mate indicators on move list
* Change clocks to use UI elements
* Make default Draw() draw child UIs
* Change title panel to display players with color icons, and type of game (e.g., 5+3 Blitz, Correspondence)
* Aborting Tests run does not really abort 