/*
 *
 *	eval_plai2.h
 * 
 *	Piece weight tables for the PLAI2 class board evaluation function
 * 
 */

const EV mpapcevOpening2[apcMax] = { 0, 100, 320, 330, 500, 900, 200 };
const EV mpapcevMiddleGame2[apcMax] = { 0, 100, 320, 330, 500, 900, 200 };
const EV mpapcevEndGame2[apcMax] = { 0, 100, 320, 330, 500, 900, 200 };

const EV mpapcsqdevOpening2[apcMax][sqMax] = {
	{0, 0, 0, 0, 0, 0, 0, 0,	// apcNull
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0},
	{800, 800, 800, 800, 800, 800, 800, 800,	// Pawn
	  50,  50,  50,  50,  50,  50,  50,  50,
	  10,  10,  20,  30,  30,  20,  10,  10,
	   5,   5,  10,  25,  25,  10,   5,   5,
	   0,   0,   0,  20,  20,   0,   0,   0,
	   5,  -5, -10,   0,   0, -10,  -5,   5,
	   5,  10,  10, -20, -20,  10,  10,   5,
	   0,   0,   0,   0,   0,   0,   0,   0},
	{-50, -40, -30, -30, -30, -30, -40, -50,	// Knight
	 -40, -20,   0,   0,   0,   0, -20, -40,
	 -30,   0,  10,  15,  15,  10,   0, -30,
	 -30,   0,  15,  20,  20,  15,   0, -30,
	 -30,   0,  15,  20,  20,  15,   0, -30,
	 -30,   0,  10,  15,  15,  10,   0, -30,
	 -40, -20,  0,    0,   0,   0, -20, -40,
	 -50, -40, -30, -30, -30, -30, -40, -50},
	{-20, -10,   0,   0,   0,   0, -10, -20,	// Bishop
	 -10,   0,   0,   5,   5,   0,   0, -10,
	  -5,   5,   5,  10,  10,   5,   5,  -5,
	   0,  15,  10,  10,  10,  10,  15,   0,
	   0,  10,  15,  10,  10,  15,  10,   0,
	  -5,   5,   5,  10,  10,   5,   5,  -5,
	 -10,   0,   0,   5,   5,   0,   0, -10,
	 -20, -10,   0,   0,   0,   0, -10, -20},
	{  0,   0,   0,   0,   0,   0,   0,   0,	// Rook
	   5,  10,  10,  10,  10,  10,  10,   5,
	   0,   5,   5,   5,   5,   5,   5,   0,
	   0,   5,   5,   5,   5,   5,   5,   0,
	   0,   5,   5,   5,   5,   5,   5,   0,
	   0,   5,   5,   5,   5,   5,   5,   0,
	   0,   5,   5,   5,   5,   5,   5,   0,
	   0,   5,   5,   5,   5,   5,   5,   0},
	{-20, -10,   0,   0,   0,   0, -10, -20,	// Queen (= Bishop + Rook)
	  -5,  10,  10,  15,  15,  10,  10,  -5,
	  -5,  10,  10,  15,  15,  10,  10,  -5,
	   0,  20,  15,  15,  15,  15,  20,   0,
	  -5,  10,  10,  15,  15,  10,  10,  -5,
	 -10,   5,   5,  10,  10,   5,   5, -10,
	 -20,  -5,   5,   5,   5,   5,  -5, -20,
	 -20, -10, -10,  -5,  -5, -10, -10, -20},
	{-30, -40, -40, -50, -50, -40, -40, -30,	// King
	 -30, -40, -40, -50, -50, -40, -40, -30,
	 -30, -40, -40, -50, -50, -40, -40, -30,
	 -30, -40, -40, -50, -50, -40, -40, -30,
	 -20, -30, -30, -40, -40, -30, -30, -20,
	 -10, -20, -20, -20, -20, -20, -20, -10,
	  20,  20,   0,   0,   0,   0,  20,  20,
	  20,  30,  10,   0,   0,  10,  30,  20}
};


const EV mpapcsqdevMiddleGame2[apcMax][sqMax] = {
	{0, 0, 0, 0, 0, 0, 0, 0,	// apcNull
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0},
	{800, 800, 800, 800, 800, 800, 800, 800,	// Pawn
	  50,  50,  50,  50,  50,  50,  50,  50,
	  10,  10,  20,  30,  30,  20,  10,  10,
	   5,   5,  10,  25,  25,  10,   5,   5,
	   0,   0,   0,  20,  20,   0,   0,   0,
	   5,  -5, -10,   0,   0, -10,  -5,   5,
	   5,  10,  10, -20, -20,  10,  10,   5,
	   0,   0,   0,   0,   0,   0,   0,   0},
	{-50, -40, -30, -30, -30, -30, -40, -50,	// Knight
	 -40, -20,   0,   0,   0,   0, -20, -40,
	 -30,   0,  10,  15,  15,  10,   0, -30,
	 -30,   0,  15,  20,  20,  15,   0, -30,
	 -30,   0,  15,  20,  20,  15,   0, -30,
	 -30,   0,  10,  15,  15,  10,   0, -30,
	 -40, -20,  0,    0,   0,   0, -20, -40,
	 -50, -40, -30, -30, -30, -30, -40, -50},
	{-20, -10,   0,   0,   0,   0, -10, -20,	// Bishop
	 -10,   0,   0,   5,   5,   0,   0, -10,
	  -5,   5,   5,  10,  10,   5,   5,  -5,
	   0,  15,  10,  10,  10,  10,  15,   0,
	   0,  10,  15,  10,  10,  15,  10,   0,
	  -5,   5,   5,  10,  10,   5,   5,  -5,
	 -10,   0,   0,   5,   5,   0,   0, -10,
	 -20, -10,   0,   0,   0,   0, -10, -20},
	{  0,   0,   0,   0,   0,   0,   0,   0,	// Rook
	   5,  10,  10,  10,  10,  10,  10,   5,
	   0,   5,   5,   5,   5,   5,   5,   0,
	   0,   5,   5,   5,   5,   5,   5,   0,
	   0,   5,   5,   5,   5,   5,   5,   0,
	   0,   5,   5,   5,   5,   5,   5,   0,
	   0,   5,   5,   5,   5,   5,   5,   0,
	   0,   5,   5,   5,   5,   5,   5,   0},
	{-20, -10,   0,   0,   0,   0, -10, -20,	// Queen (= Bishop + Rook)
	  -5,  10,  10,  15,  15,  10,  10,  -5,
	  -5,  10,  10,  15,  15,  10,  10,  -5,
	   0,  20,  15,  15,  15,  15,  20,   0,
	  -5,  10,  10,  15,  15,  10,  10,  -5,
	 -10,   5,   5,  10,  10,   5,   5, -10,
	 -20,  -5,   5,   5,   5,   5,  -5, -20,
	 -20, -10, -10,  -5,  -5, -10, -10, -20},
	{-30, -40, -40, -50, -50, -40, -40, -30,	// King
	 -30, -40, -40, -50, -50, -40, -40, -30,
	 -30, -40, -40, -50, -50, -40, -40, -30,
	 -30, -40, -40, -50, -50, -40, -40, -30,
	 -20, -30, -30, -40, -40, -30, -30, -20,
	 -10, -20, -20, -20, -20, -20, -20, -10,
	  20,  20,   0,   0,   0,   0,  20,  20,
	  20,  30,  10,   0,   0,  10,  30,  20}
};


const EV mpapcsqdevEndGame2[apcMax][sqMax] = {
	{0, 0, 0, 0, 0, 0, 0, 0,	// Null
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0,
	 0, 0, 0, 0, 0, 0, 0, 0},
	{800, 800, 800, 800, 800, 800, 800, 800,	// Pawn
	 200, 200, 200, 200, 200, 200, 200, 200,
	 100, 100, 100, 100, 100, 100, 100, 100,
	  50,  50,  50,  50,  50,  50,  50,  50,
	  25,  25,  25,  25,  25,  25,  25,  25,
	  12,  12,  12,  12,  12,  12,  12,  12,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0},
	{-75, -25, -25, -25, -25, -25, -25, -75,	// Knight
	 -25, -20, -10,   0,   0, -10, -20, -25,
	 -25, -10,  10,  10,  10,  10, -10, -25,
	 -25,   0,  10,  25,  25,  10,   0, -25,
	 -25,   0,  10,  25,  25,  10,   0, -25,
	 -25,   0,  10,  10,  10,  10, -10, -25,
	 -25, -20, -10,   0,   0, -10, -20, -25,
	 -75, -25, -25, -25, -25, -25, -25, -75},
	{-20, -10, -10, -10, -10, -10, -10, -20,	// Bishop
	 -10, -10,   0,   0,   0,   0, -10, -10,
	 -10,   0,   0,   0,   0,   0,   0, -10,
	 -10,   0,   0,  15,  15,   0,   0, -10,
	 -10,   0,   0,  15,  15,   0,   0, -10,
	 -10,   0,   0,   0,   0,   0,   0, -10,
	 -10, -10,   0,   0,   0,   0, -10, -10,
	 -20, -10, -10, -10, -10, -10, -10, -20},
	{  0,  10,  10,  10,  10,  10,  10,   0,	// Rook
	  10,   5,   0,   0,   0,   0,   5,  10,
	  10,   0,   0,   0,   0,   0,   0,  10,
	  10,   0,   0,   0,   0,   0,   0,  10,
	  10,   0,   0,   0,   0,   0,   0,  10,
	  10,   0,   0,   0,   0,   0,   0,  10,
	  10,   5,   0,   0,   0,   0,   5,  10,
	   0,  10,  10,  10,  10,  10,  10,   0}, 
	{-20,   0,   0,   0,   0,   0,   0, -20,	// Queen
	   0,  -5,   0,   0,   0,   0,  -5,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,   0,   0,  15,  15,   0,   0,   0,
	   0,   0,   0,  15,  15,   0,   0,   0,
	   0,   0,   0,   0,   0,   0,   0,   0,
	   0,  -5,   0,   0,   0,   0,  -5,   0,
	 -20,   0,   0,   0,   0,   0,   0, -20},
	{-50, -35, -20, -20, -20, -20, -35, -50,	// King
	 -35,  20,  15,  15,  15,  15,  20, -35,
	 -20,  15,  25,  25,  25,  25,  15, -20,
	 -20,  15,  25,  25,  25,  25,  15, -20,
	 -20,  15,  25,  25,  25,  25,  15, -20,
	 -20,  15,  25,  25,  25,  25,  15, -20,
	 -35,  20,  15,  15,  15,  15,  20, -35,
	 -50, -35, -20, -20, -20, -20, -35, -50}
};
