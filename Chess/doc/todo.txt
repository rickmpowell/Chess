  Do "glowing edges" for last move highlight on UIBD
  Color icons for icon buttons, hover variants
  Add disabled support to static controls and hook up to the Log File: label in the UIDB
  When changing log depth, need to re-layout the window
  Add UI to expand/collapse log entries
  Scroll-wheeling over UIML during test redraws movelist in wrong place
  Turn off clocks during test, turn back on when done
  Use gray scale everywhere in board edit mode
  Block appropriate UI when in board edit mode
  Disable mouse interface on UIBD when tests running
  Reimplement castling for Chess960; need a castling flag in the MV (use apcPromote for rook position?)
  Interrupting perft tests doesn't clean up and abort right
  Review mouse hit testing in Hover/Drag when drag capture is on. Currently the UIGA does all 
    hit testing, but the APP does the mouse dispatching. Either the UIGA or APP should do both.
  Can we use a different mixing mode than using opacity for annotations?
  Should we support move numbers that don't start at 1? For PGN and FEN reads?
  Test reading PGN files that don't have white to start
  Save thinking time with each move in the move log
  Allow each player to use different time controls
  When AIs are playing moves aren't animated
  PGN files that start in standard position shouldn't save FEN
  Escaping out of an AI game needs to stop the clocks
  In board edit mode, changes in the UIBD need to redraw the UIPCP
  On clock expiration, game result should be a draw if "winning" side has insufficient material
  Change FEN control in board editor to be an edit box
  Add en passant state to board edit mode
  Exiting board edit mode needs to check for valid board states and prepare for starting a game
  Flip Game phase values (GPH) so end game is 0 and higher values mean closer to opening. 
  Implement copy FEN command
  Lock out most UI when AI is thinking
  AI: refutation tables
  How to deal with 3-repeat draws in transposition table?
  Can we incrementally keep whether someone is in check in the BD and make them noisy moves?
  UIDB: Turn it into a tabbed panel with piece value table, log, or animated move list
  Test: option to stop or continue on errors 
  Test: Add option to draw or not draw moves during test run
  Test: Don't display resign/draw controls during test playback
  Test: Aborting Undo test doesn't stop the entire test run - it just keeps on to player test run
  Test: We're erroneously reporting success when aborting test run
  Test: add option to choose which PGN files to run
  Test: add options for which tests to run
  Test: if no pgn files in a directory, file enumeration crashes
  Test: Is there a C++ way to enumerate files in a directory for Test? (std::filesystem::directory_iterator ?)
  Test: PGN games should feed moves through a PL
  AI: Add more complex pawn structure eval
  AI: Implement king safety evaluator
  AI: Communicate best continuation back (principle variation)
  AI: spin off AI into its own thread
  AI: annotate candidate best moves on board while thinking
  AI: look deeper on a few of the "best" moves
  AI: Do a multithreaded lookup
  AI: Play through until no checks (quiescence) before evaluation
  Eval: Add square control factor to evaluation function
  Choosing the player picker while the AI is running crashes
  Can we make things like Undo work while AI is thinking?
  Move gen: Use magic bitboards for move generation
  Move gen: Use magic bitboards for attack squares
  Log: Need a fancy search log that displays candidate move list
  Log: Should we hash tags?
  Log: when hovering over log entries with FEN attributes, hover a mini-board
  UI: Add a new game panel
  UI: try to pixel align as many borders as possible
  UI: Move as many drawing objects into classes as possible
  UI: Need a visual indication of where focus is
  UIPL: on hover, change background color when we can change the player
  When player picker is up, clicking outside the picker should make it cancel.
  Help: Help box icon looks like shit
  UIPL: Move level control into the chooser
  Move all localizable strings into resources
  Need to rethink the MakeMv/UndoMv/RedoMv in BD, BDG, UIBD, and GA and where game over state is checked
  Use UCI (universal chess interface) to communicate to UI from AI
  Add ability to load FEN files
  ML: Scrollbar thumb isn't resizing when move list gets long enough to have a thumb
  ML: If text in move list gets too small, replace icons with letters
  UI: Scale buttons to size of window
  UITI: Layout using font metrics
  UI: Test with alternate fonts
  Open: PGN game browser if multiple games in Open...
  UI: Implement labeled icon buttons
  UI for specifying human player names
  UI: When dragging thumb, if drag off the scrollbar, snap thumb back to original position
  ML: With small windows, need to do something about the move list. Or limit window size?
  ML: Hook up resignation button
  ML: Add a UI for offering draws
  ML: Animate the game over panel into position.
  ML: Add undo/redo/play/pause buttons in a panel
  Keyboard entry of moves
  RULE: Official tournament game has slightly different rules for some draw situations
  RULE: Have an official game mode that does not allow undo as a rule
  UIBD: Implement queued move-ahead 
* Rework the whole create/release resource stuff
* Optimize log to redraw minimally - Open/Close combo, Temp, and first/last line
* Board edit mode close button is black instead of white
* Interrupt the AI after first move, then restart the AI asserts in UIML
* Log: make the logs collapsible
* Log: File logging and UIDB logging need to have their own depth
* UIDB: Add support for multi-line log entries in db panel
* We're sometimes asserting in uiml Draw() when running test and alt-tabbing away and back
* Make VMVE a template and make generated move lists and game move lists with separate sizes
* When tests running, change Test menu item text to "Stop Test" and change tooltip on test button
* UI: Implement disabled buttons that hook to CMD
* Game controls don't redraw when game starts
* Test: Clicking test button in UIDB should interrupt a running test
* Limit UI during message pumps in test
* BUG: dragging UIPCP icons doesn't update the icons themselves when dragging over the icon
* UI: Implement disabled menu items hooked to the CMD
* ML: I don't think move list is baseline aligned - problem with descenders? 
* ML: Reize icons in move list slightly larger than text
* UIBD: Hilite last made move on board
* Cross isn't dragging in board setup in piece delete
* Background of UIPL doesn't match in the title box
* Click-click moving doesn't cancer with right-clicks
* Right clicking doesn't give us single square annotation
* Ticking clock overwrites popup tips
* Separate background colors for content areas and button bars
* UIBD: Implement click-from/click-to mouse move interface
* Don't use the term "capture" for mouse capture, use "drag".
* In UI, add support for "dragging" when capture is taken but no button is down
* Limit annotation arrows to legal move possibilities
* If multiple annotations point at the same square, back off center a little so arrows don't overlap
* Annotation graphics should scale to size of board
* Trying to add an annotation that already exists should delete the annotation
* Right-clicking on non-square areas should cancel all annotations
* UIBD: Implement circle annotations on mouse right click
* UIBD: Implement arrow annotations on mouse right click/drag
* UITI: display time controls based on actual time controls
* When clicking on unmoveable piece and dragging, we're picking up hovering behavior
* UIBD: Legal move circles disappear when dragging
* In board edit mode, dragging pieces around should display hilite when over drop squares
* Legal moves are displayed in board edit mode when hovering
* Game over panel sometimes doesn't get reset on new game
* Clocks don't get reset right on new game
* Clocks should run as soon as game loop starts
* Formalize game states - editing, initialized but not started, playing, post-game
* When changing time controls from multi-block to single-block, clocks don't immediately resize
* BUG: Play a human-human bullet game, one move, let black's clock flag, then New Game, and can't move
* ML: Checkmates should have a # instead of a +
* Display time control information in clocks if there are increments or multiple phases
* Save real date in PGN files
* Save real player names in PGN files
* Display a flag in UICLOCK when time expires
* Write a FillRc with a solid color instead of a brush
* UITI: Hook up UI elements to real information from the GA
* Unstarted games saved as a PGN file show the game as tied
* PGN files need to save starting position FEN if we're starting from non-standard board
* When black is first to play after editing a board, move list starts on white instead of black
* Make board edit mode with severely restricted UI
* Make UICLOCK use background colors
* Add castle state to board edit mode  
* Make a few bold fonts for use in UI elements
* Add side to move to board edit mode
* Add close boxes to titled panels
* Add titled panels
* Add foreground and background properties to UI elements, and set them up automatically in hbrText and hbrBack
* UIBD needs mode for unrestrained piece movement during board setup command
* Feature: Add a UI for setting up a board
* UIBD: Dragging pieces outside the board rectangle doesn't redraw the piece right
* RULE: game time options
* UIBD: Dragging pieces outside board clips the dragged piece
* GA: Break the UI out of the GA
* Display debug build somewhere on screen
* AI: take clock time into account
* AI: interruptible
* Add canceled game-over state
* AI: research "soft fail" search
* AI: Null move optimization
* AI: PV search optimization
* AI: aspiration window optimization
* AI: time management strategy
* AI: Enumerate xt moves first in alpha-beta move enum
* AI: Implement incremental depth search
* Make pawn promotions not-quiescent (noisy)
* Hook up transposition table to the main eval function
* Exported PGN files don't always display result right in headers
* XP: alloc/delete transposition table at beginning/end of each ai move
* XP: use transposition table evals in pre-sort
* XP: create transposition table on every full eval
* Can we have a profiling mode that skips display and/or initializes different defaults?
* Eval: random eval should be some transform on the hash of the board to stabilize the randomness
* Search: quiescent search doesn't detect draws. Can it?
* Move: incrementally track game phase
* AI: Implement pawn structure evaluator
* Test: implement panel for showing piece value table heat map
* Take advantage of apcMove and cpcMove in the MV
* UndoMv does not restore last pawn or capture move correctly
* Add apcMove and cpcMove to the MV 
* BD: remove x88 board
* Move gen: bitboard king
* Move gen: bitboard bishops, rooks, and queens
* Move gen: bitboard knights
* Move gen: bitboard pawns
* Move gen: use bitboards to test attack squares for legal castles
* Test: Add perft level option
* Throw exceptions for user interrupts
* Test: Errors in PGN file test should display in test progress panel
* AI: Quitting the app while AI is running sometimes crashes in PresentSwch
* Test: Implement a test harness
* Open: Beef up error handling in deserialize
* Test: Don't show player names in UITI during test runs
* Use C++ exception class to throw exceptions
* Throw exceptions for test failures
* Throw exceptions for parse errors
* Add ability to paste FEN format
* Open: Implement an interruption hook in deserialize and use it in Test, but not Open or Paste
* Include en passant and castle states to Zobrist hashing
* Have debug perft tests stop at a certain number of expected nodes
* Use hashes to compare draws and board equality
* Can we hash boards to help with the 3-fold draw detection?
* AI: Hash boards
* Implement Zobrist hashing of the board and keep it up-to-date in the BD
* Move cpcToMove from the BDG to the BD
* Move gen: checks use bitboards for bishops, rooks, and queens
* Keep occupied (white/black) and empty square bitboard in the BD
* Move gen: checks use bitboards for king
* Move gen: checks use bitboards for knights
* Move gen: checks use bitboards for pawns
* SBAR: thumb dragging is slightly off - does not adjust for location of initial mouse click within the thumb
* UIBD: With board rotated black point of view, animations are messed up
* UI: Add mouse support for dragging scrollbar thumb
* UI: add timer dispatching to UIs
* UI: Add repeater on scrollbar hold down
* UI: Improve visuals for scrollbar
* UI: Add mouse support for clicking scrollbar pages
* UI: Peg scrollbar thumb at minimum size
* Implement scrollbars as a control ui element
* Test: add a move gen test and validate some hard cases
* Test: add perft test
* Should do const references instead of by-value calls for RCF and PTF
* AI: Starting AI with black-to-move lets white move first
* Review code for using min/max/peg
* Debug panel isn't showing on boot
* Rename PTF and RCF to PT and RC, and all other f suffixes. 
* AI: Should we do move/undo instead of duplicating boards? 
* Log: second game screws up the log content/view
* Log: Add properties to tag 
* Log: Logging gets really slow when a lot of log entries start piling up.
* Dragged human player moves shouldn't animate into place
* Make small icon with logo
* Use our logo in app icon
* UI for choosing computer player
* AI: need to discourage early queen development
* ML: Undo doesn't take down game over panel
* ML: Merge UIGO and UIGC
* UIBD: There is a weird hit test on the left edge of the board that is hitting squares three squares over
* Feature: Allow human to play the AI
* PL: Add message pump to the PL for getting player moves
* With Arial font, player name UI elements has a very wide gap between name and color circle
* UIPL: scale long player names in UITI and UIML
* UIBD: When dragging pieces, highlight square when hovering over a legal move
* Move logging buttons into their own button bar in UIDB
* UITI: Put name of our program with the logo
* Buttons in UIDB don't display sometimes on first boot
* Save icon on debug command bar is clipped on left edge
* UIBD: Optimize redraw
* Label text size on UIBD is changing - maybe when alt-tabbing to another app and coming back?
* Split up game into more parts: opening, early mid, mid, late mid, end, late end.
* Should make board evaluations relative to pawn value
* Convert to Intel compiler
* Use custom move array that pre-allocates 50 fixed items
* Implement an integer spinner control and use it for log depth
* PgeomCreate can get the d2 factory from App().
* Tooltips don't resize for shorter text (only with FreeSerif?)
* Display log depth in debug panel
* Implement "default" log depths, which can be overriden by user changing them
* Save: Save our game PGN log file in the directory of the .exe 
* Add UI turn on/off file logging
* logging to file
* Add UI to pick log depth level, 
* Logging options: heirarchy depth
* Test: Move test progress into debug panel
* Add an option in logging to replace last log entry
* Heirarchical logging
* Do a couple different AIs and have them play one another
* AI: Report boards/second evaluation speed in debug window
* Bug: File/Open doesn't redraw board or scroll ML at end of the load
* ML: Implement mouse interface to change selection on UIML
* Bug: Dragging window edges doesn't resize game interior (dragging corners works)
* Bug: Open PGN files assert if no \n on last line
* Use bit fields to layout MV
* Save: Saving PGN files doesn't break lines at 80 columns as spec'ed.
* Verify IPC is layed out in the byte in the smart way
* Make scroll wheel scrolling do multiples of line height
* Resizing UIPS screws up bounds on scroll wheel scroll
* Add mouse scroll wheel support for scrolling UIs
* ML: baseline of numbers, white moves, and black moves are not the same
* Change cursor over wheel-able areas to double arrow
* Alpha-beta pruning does not work well in end game.
* AI: need some end-game improvement
* ML: Animate moves when manually going through move list
* AI: not taking mate in one in certain situations (see game-2021-05-18-1.pgn)
* BDG: Change Undo/Redo to be an imvCur operation
* ML: Implement keyboard interface to change selection on UIML (arrow, home, end, pgup, pgdn?)
* Implement keyboard focus for UI
* Make debug log scroll
* Feature: Add copy/paste commands to export/import PGN game board
* Can we compile using C++ 17?
* Change content and view rectangles in scrolling panels to be owner relative instead of global
* Make scrollbar show current scroll location in UIPS
* Test: Re-organize PGN test files to be in sub-directories
* Rescale piece valuations to be 100 for a pawn.
* AI: Do 3-move repetition draws in the AI lookahead
* AI: Display progress in the debug panel
* Move PGN decoding code into save
* Move PGN parsing code into open
* Move list isn't scrolling selection into view
* Need to add small cell margins in move list
* UIBD: Scale outline width on resize
* UIBD: When board gets small, stop displaying borders
* Convert save code to use streams
* Save: When writing PGN files, don't use P (no P for regular moves, column for captures)
* Bug: Minimizing window asserts
* ML: Implement selection in UIML
* Build: Move non-code resources into a subdirectory
* ML: clip long player names in UITI and UIML
* Resize ML and TI based on font metrics
* Not redrawing board after dragging to an illegal move
* UIBD: Scale text on labels to size of board
* Get font metrics to layout multi-line text
* ML: Modify move list to do real algebraic notation with full optimzations
* Use unicode figures in move list
* Size tooltips to the size of the text 
* UI: Add tooltips for buttons
* Add menu item to show/hide debug panel
* UIGO panel comes up during no-show test runs
* Need to add a redraw state (fast, hidden, animated) to the GA
* Add bitboards to the BD, track pieces, and validate them
* UI: Implement a debug screen panel
* Save PGN is not writing correct game out
* ML: Move list does not redraw on window resize
* Should error in MakeMv if we try to make an illegal move
* AI: Add message pump while thinking
* Add command to load PGN files and load specific games for analysis
* Add ability to open PGN files
* Add ability to save PGN files
* AI: convert presort to use a binary search and insertion sort
* Bug: kings are moving into queen check
* Bug: don't display all possible moves during mouse hover
* AI: Don't prune moves during quiescent move gen if we're in check
* Add test button to the debug panel.
* Rename SPA to UI
* Need a no-clock mode that works with certain clock games, and playback modes
* Implement full clock/timing rules
* Convert to 0x88 board
* AI: Sort moves to improve alpha-beta pruning
* AI: Play through until no captures before board evaluation
* BDG eval: checkmates should be adjusted by number of moves
* AI: Not taking checkmates when they are available
* Have File/Play play the game on screen instead of creating new game
* Do Alpha-Beta pruning in AI
* Implement dumb AI for computer play
* Bug: e.p. gets put on non-pawn moves sometimes during the full test. 
* Move list isn't wide enough for Pxd6 e.p.+
* Turn off rotate icon during rotation
* Rename TF to TX
* Center character in character buttons
* Promoted pawn moves on UIBD are displayed with dark circle instead of light circle
* Fix gridlines between panels in UIML
* Change SPATI items to be separate UI elements
* Hovering and tracking feedback over image buttons
* Remove DxWidth and DyHeight from SPA
* Game Over panel isn't working
* Assert when dragging and upclick off control
* Remove dependency on app in all the UIs
* Get BTNs working and dispatching cmds
* Beef up layout code to handle locating clocks et.al.
* Better quality scaling on small boards
* Add UI for resigning
* Add UI for offering draw
* Add controls to UIML for resigning/offering draws
* Move to Direct2D 1.1 and use ID2D1DeviceContext
* Change player names in the UIML to use UI elements
* Lock out move UI when game is over - necessary for non-stalemate draws and resignation
* Implement draws by 3-move repetition
* Implement draws by 50 moves without progress
* Implement move redo
* Implement move undo
* Add information to MV so moves can be undone
* Clocks don't rotate with rotating board
* Display game end explanations in the move list (checkmate, resign, stalemate, etc.)
* Implement loss by clock expiration
* Clocks should turn red when close to timing out
* Clocks should animate when ticking
* Implement clock timers
* Add check/mate indicators on move list
* Change clocks to use UI elements
* Make default Draw() draw child UIs
* Change title panel to display players with color icons, and type of game (e.g., 5+3 Blitz, Correspondence)
* Aborting Tests run does not really abort 